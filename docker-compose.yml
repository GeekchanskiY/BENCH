version: '3.8'
services:
  db-local:
    image: postgres:14.5
    container_name: db-fastapi
    ports:
      - "8001:5432"
    env_file:
      - ./.env_db_fastapi
    volumes:
      - pgdata_fastapi:/var/lib/postgresql/data
    networks:
      - backend_fastapi
  
  db-local2:
    image: postgres:14.5
    container_name: db-rails
    ports:
      - "8002:5432"
    env_file:
      - ./.env_db_rails
    volumes:
      - pgdata_rails:/var/lib/postgresql/data
    networks:
      - backend_rails

  # FastAPI application
  coordinator_backend:
    build: 
      context: ./coordinator/
    image: backend-bench:latest
    restart: always
    volumes:
      - ./src:/src
      - ./opt:/opt
    ports:
      - "80:80"
    env_file:
      - ./.env
    networks:
      - backend_fastapi
      - backend_communicator
    depends_on:
      - db-local
  
  # Rails application
  ressearch_backend:
    build:
      context: ./ressearch/
    env_file:
      - .env
    image:
      ressearch_backend:latest
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db-local2
    networks:
      - backend_rails
      - backend_communicator
    
    
#    environment:
#      - API_ENVIRONMENT=local
#    healthcheck:
#      test: ["CMD", "curl", "-f", "localhost:8000/healthcheck"]
#      interval: 60s
#      timeout: 5s
#      retries: 5


volumes:
  pgdata_fastapi:
  pgdata_rails:
  

networks:
  backend_fastapi:
    driver: bridge
  backend_rails:
    driver: bridge
  backend_communicator: